: I tried to implement file-name detection without needing to specify .mp3.  Basically, if you had specified the path to an mp3 file but didn't write the mp3, the script could detect that for you and add it automatically.  It wouldn't work if you specified an mp3 but you only have an mp3.
: Unfortunately, not only is this perplexing and complicated, it also doesn't work - imagine if you specify an m4a, but there is an mp3 with the same name.  You'll encounter the wrong behavior.
: So specify the file types like proper human beings!  Thanks.
///
 if not file.endswith(".mp3"):
            here = os.listdir()
            # * Cool how strip() removes all from an input set of characters.
            if (full := file.lstrip("./") + ".mp3") in here:
                paths.append(os.path.abspath(full))
            else:
                print(full)
                raise FileNotFoundError
        else:
           paths.append(os.path.abspath(file))
///
: I ended up using os.path functions instead.

///

;nyquist plug-in
;version 1
;type generate
;name "Surround silence"
;action "Processing..."
;author "Spencer Gouw"
;copyright "Released under terms of the GNU General Public License version 2"
;literally copied from Steve Daulton's "Insert Silence"

(defun insertstart (sig) 
  (sim (s-rest 0) 
    (at 1 (cue sig))))
(multichan-expand #'insertstart s)


;multichan-expand is defined in nyquist.lsp in Audacity's Nyquist folder.
;It's a quick way to work with stereo, since Nyquist can actually
;only operate on mono channels.
;Stereo channels are passed as arrays of mono channels, with each element
;of equal length; the function is called once for each.



;see snd-add, shift-time, etc.
;recommended to not use snd- functions, as those are low level
;use higher level functions instead

;also read about environment variables. like what is *loud* and *warp*?

///